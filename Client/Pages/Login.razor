@page "/"
@page "/{RegisterRedirect:bool}"

@inject ILoginViewModel _loginViewModel
@inject NavigationManager _navigationManager
@inject IToastService _toastService
@inject IAccessTokenService _accessTokenService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IOptions<ApplicationSettings> _applicationSettings


<SpinLoader IsLoading="IsLoading">
    <LoadingTemplate>
        <div class="col-12" style="background-color: lightgray; height:400px; vertical-align:middle">
            <br /><br />
            <Chase Center="true" Color="blue" Size="70px"></Chase>
        </div>
    </LoadingTemplate>
    <ContentTemplate>
        <div class="container">
            <div class="row">
                <div class="col-sm">
                </div>
                <div class="col-sm">
                    <blockquote class="blockquote text-center">
                        <p class="h3"><strong>Login</strong></p>
                    </blockquote>
                    <hr class="white-horizontal-line" />
                    <EditForm Model="@_loginViewModel" OnValidSubmit="@AuthenticateJWT">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div>
                            <input id="input_emailaddress" @onkeypress="OnKeyPress" type="text" @bind="_loginViewModel.Username" class="form-control dark-theme-textbox" placeholder="username">
                        </div>
                        <br />
                        <div >
                            <input id="input_password" @onkeypress="OnKeyPress" type="password" @bind="_loginViewModel.Password" class="form-control dark-theme-textbox" placeholder="password">
                        </div>
                        <br />
                        <div>
                            <div>
                                <button id="button_login" type="submit" class="btn btn-danger btn-md">Login</button>
                            </div>
                            <br/>
                            <div>
                                <a style="font-weight: bold;" href="/createaccount">Create an account</a>
                            </div>
                        </div>
                    </EditForm>
                    <hr class="white-horizontal-line" />
                    <div class="col-12">
                        <p style="font-size: larger;" class="white-text">
                            Personal Tool is a website of TTT
                        </p>
                    </div>
                </div>
                <div class="col-sm">
                </div>
            </div>
        </div>
        
    </ContentTemplate>
</SpinLoader>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; } = null!;

    [Parameter]
    public bool RegisterRedirect { get; set; }

    private bool IsLoading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Initializing the login details for John Smith
        if(!RegisterRedirect)
        {
            _loginViewModel.Username = "xxxxxx";
            _loginViewModel.Password = "xxxxxx";
        }

        var authState = await AuthenticationState;

        if (authState.User.Identity is { IsAuthenticated: true })
        {
            _navigationManager.NavigateTo("/profile");
        }
    }

    private async Task OnKeyPress(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
            await AuthenticateJWT();
    }

    private async Task AuthenticateJWT()
    {
        IsLoading = true;
        AuthenticationResponse authenticationResponse = await _loginViewModel.AuthenticateJWT();
        if (authenticationResponse.Token != string.Empty)
        {
            await _accessTokenService.SetAccessTokenAsync("jwt_token", authenticationResponse.Token);
            await ((CustomAuthenticationStateProvider)_authenticationStateProvider).MarkUserAsAuthenticated();
            
            if(_applicationSettings.Value.UIFramework == "Server")
                _navigationManager.NavigateTo("/profile",true);
            else
                _navigationManager.NavigateTo("/profile", true);
        }
        else
        {
            _toastService.ShowError("Invalid username or password");
        }
        IsLoading = false;
    }
}